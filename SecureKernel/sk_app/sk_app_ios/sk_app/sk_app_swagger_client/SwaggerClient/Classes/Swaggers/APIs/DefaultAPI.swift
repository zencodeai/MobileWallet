//
// DefaultAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class DefaultAPI {
    /**
     Init

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func initApiV1InitPost(body: BalanceInitData, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        initApiV1InitPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Init
     - POST /api/v1/init
     - 

     - examples: [{contentType=application/json, example=""}]
     - parameter body: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func initApiV1InitPostWithRequestBuilder(body: BalanceInitData) -> RequestBuilder<Void> {
        let path = "/api/v1/init"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Online

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func onlineApiV1OnlinePost(body: OnlineTransactionData, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        onlineApiV1OnlinePostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Online
     - POST /api/v1/online
     - 

     - examples: [{contentType=application/json, example=""}]
     - parameter body: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func onlineApiV1OnlinePostWithRequestBuilder(body: OnlineTransactionData) -> RequestBuilder<Void> {
        let path = "/api/v1/online"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Process

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func processApiV1ProcessPost(body: ProcessingData, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        processApiV1ProcessPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Process
     - POST /api/v1/process
     - 

     - examples: [{contentType=application/json, example=""}]
     - parameter body: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func processApiV1ProcessPostWithRequestBuilder(body: ProcessingData) -> RequestBuilder<Void> {
        let path = "/api/v1/process"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Provision

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func provisionApiV1ProvisionPost(body: ProvisioningData, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        provisionApiV1ProvisionPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Provision
     - POST /api/v1/provision
     - 

     - examples: [{contentType=application/json, example=""}]
     - parameter body: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func provisionApiV1ProvisionPostWithRequestBuilder(body: ProvisioningData) -> RequestBuilder<Void> {
        let path = "/api/v1/provision"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Session Data

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sessionDataApiV1SessionDataPost(body: RequestSessionData, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        sessionDataApiV1SessionDataPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Session Data
     - POST /api/v1/session_data
     - 

     - examples: [{contentType=application/json, example=""}]
     - parameter body: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func sessionDataApiV1SessionDataPostWithRequestBuilder(body: RequestSessionData) -> RequestBuilder<Void> {
        let path = "/api/v1/session_data"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
